{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"aws-sdk\"","webpack:///./src/lambdas/ecs-service/index.ts"],"names":[],"mappings":"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","file":"ecs-service/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"aws-sdk\");","import type {\n  CloudFormationCustomResourceEvent,\n  CloudFormationCustomResourceCreateEvent,\n  CloudFormationCustomResourceUpdateEvent,\n  CloudFormationCustomResourceDeleteEvent,\n} from 'aws-lambda';\nimport { ECS } from 'aws-sdk';\n\ninterface HandlerReturn {\n  PhysicalResourceId: string;\n  Data: {\n    ServiceName: string;\n  };\n}\n\nexport interface BlueGreenServiceProps {\n  cluster: string;\n  serviceName: string;\n  taskDefinition: string;\n  launchType: string;\n  platformVersion: string;\n  desiredCount: number;\n  subnets: string[];\n  securityGroups: string[];\n  targetGroupArn: string;\n  containerPort: number;\n  schedulingStrategy: string;\n}\n\nconst ecs = new ECS();\n\nconst getProperties = (props: CloudFormationCustomResourceEvent['ResourceProperties']): BlueGreenServiceProps => ({\n  cluster: props.Cluster,\n  serviceName: props.ServiceName,\n  taskDefinition: props.TaskDefinition,\n  launchType: props.LaunchType,\n  platformVersion: props.PlatformVersion,\n  desiredCount: props.DesiredCount,\n  subnets: props.Subnets,\n  securityGroups: props.SecurityGroups,\n  targetGroupArn: props.TargetGroupArn,\n  containerPort: props.ContainerPort,\n  schedulingStrategy: props.SchedulingStrategy,\n});\n\nconst onCreate = async (event: CloudFormationCustomResourceCreateEvent): Promise<HandlerReturn> => {\n  const {\n    cluster,\n    serviceName,\n    taskDefinition,\n    launchType,\n    platformVersion,\n    desiredCount,\n    subnets,\n    securityGroups,\n    targetGroupArn,\n    containerPort,\n    schedulingStrategy,\n  } = getProperties(event.ResourceProperties);\n\n  const { service } = await ecs\n    .createService({\n      cluster,\n      serviceName,\n      taskDefinition,\n      launchType,\n      platformVersion,\n      desiredCount,\n      schedulingStrategy,\n      deploymentController: {\n        type: 'CODE_DEPLOY',\n      },\n      networkConfiguration: {\n        awsvpcConfiguration: {\n          subnets,\n          securityGroups,\n        },\n      },\n      loadBalancers: [\n        {\n          targetGroupArn: targetGroupArn,\n          containerPort,\n          containerName: 'sample-website',\n        },\n      ],\n    })\n    .promise();\n\n  if (!service) throw Error('Service could not be created');\n\n  return {\n    PhysicalResourceId: service.serviceArn as string,\n    Data: {\n      ServiceName: service.serviceName as string,\n    },\n  };\n};\n\n/**\n * For services using the blue/green (CODE_DEPLOY) deployment controller,\n * only the desired count, deployment configuration, task placement constraints\n * and strategies, and health check grace period can be updated using this API.\n * If the network configuration, platform version, or task definition need to be\n * updated, a new AWS CodeDeploy deployment should be created.\n * For more information, see CreateDeployment in the AWS CodeDeploy API Reference.\n */\nconst onUpdate = async (event: CloudFormationCustomResourceUpdateEvent): Promise<HandlerReturn> => {\n  const { cluster, serviceName, desiredCount } = getProperties(event.ResourceProperties);\n\n  const { service } = await ecs\n    .updateService({\n      service: serviceName,\n      cluster,\n      desiredCount,\n    })\n    .promise();\n\n  if (!service) throw Error('Service could not be updated');\n\n  return {\n    PhysicalResourceId: service.serviceArn as string,\n    Data: {\n      ServiceName: service.serviceName as string,\n    },\n  };\n};\n\nconst onDelete = async (event: CloudFormationCustomResourceDeleteEvent): Promise<void> => {\n  const { cluster, serviceName } = getProperties(event.ResourceProperties);\n\n  await ecs\n    .deleteService({\n      service: serviceName,\n      cluster,\n      force: true,\n    })\n    .promise();\n\n  await ecs\n    .waitFor('servicesInactive', {\n      cluster,\n      services: [serviceName],\n    })\n    .promise();\n};\n\nexport const handler = async (event: CloudFormationCustomResourceEvent): Promise<HandlerReturn | void> => {\n  const requestType = event.RequestType;\n\n  switch (requestType) {\n    case 'Create':\n      return onCreate(event as CloudFormationCustomResourceCreateEvent);\n    case 'Update':\n      return onUpdate(event as CloudFormationCustomResourceUpdateEvent);\n    case 'Delete':\n      return onDelete(event as CloudFormationCustomResourceDeleteEvent);\n    default:\n      throw new Error(`Invalid request type: ${requestType}`);\n  }\n};\n"],"sourceRoot":""}